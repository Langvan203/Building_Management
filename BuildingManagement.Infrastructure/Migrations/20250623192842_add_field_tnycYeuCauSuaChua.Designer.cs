// <auto-generated />
using System;
using BuildingManagement.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingManagement.Infrastructure.Migrations
{
    [DbContext(typeof(BuildingManagementDbContext))]
    [Migration("20250623192842_add_field_tnycYeuCauSuaChua")]
    partial class add_field_tnycYeuCauSuaChua
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaoTri_NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<int>("MaKeHoach")
                        .HasColumnType("int");

                    b.HasKey("MaNV", "MaKeHoach");

                    b.HasIndex("MaKeHoach");

                    b.ToTable("BaoTri_NhanVien");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            RoleName = "Quản lý tòa nhà",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            RoleName = "Nhân viên lễ tân",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 4,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            RoleName = "Nhân viên tòa nhà",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVu", b =>
                {
                    b.Property<int>("MaDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDV"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsThanhToanTheoKy")
                        .HasColumnType("bit");

                    b.Property<int>("KyThanhToan")
                        .HasColumnType("int");

                    b.Property<int>("MaLDV")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TyLeBVMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TyLeVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDV");

                    b.HasIndex("MaLDV");

                    b.HasIndex("MaTN");

                    b.ToTable("dvDichVus");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVuSuDung", b =>
                {
                    b.Property<int>("MaDVSD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDVSD"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChuyenHoaDon")
                        .HasColumnType("bit");

                    b.Property<int>("IsDuyet")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRequestByResident")
                        .HasColumnType("bit");

                    b.Property<int>("MaDV")
                        .HasColumnType("int");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDauTinhPhi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThucTinhPhi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienBVMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("TrangThaiSuDung")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDVSD");

                    b.HasIndex("MaDV");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaMB");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("dvDichVuSuDungs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDien", b =>
                {
                    b.Property<int>("MaDien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDien"));

                    b.Property<decimal>("ChiSoCuoi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChiSoDau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsThanhToan")
                        .HasColumnType("bit");

                    b.Property<int>("MaDH")
                        .HasColumnType("int");

                    b.Property<int>("MaDM")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDauSuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDenHang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTieuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDien");

                    b.HasIndex("MaDH");

                    b.HasIndex("MaDM");

                    b.ToTable("dvDiens");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDienDinhMuc", b =>
                {
                    b.Property<int>("MaDM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDM"));

                    b.Property<int>("ChiSoCuoi")
                        .HasColumnType("int");

                    b.Property<int>("ChiSoDau")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DonGiaDinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDM");

                    b.ToTable("dvDienDinhMucs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDienDongHo", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDH"));

                    b.Property<int>("ChiSoSuDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int?>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDongHo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDH");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaMB")
                        .IsUnique()
                        .HasFilter("[MaMB] IS NOT NULL");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("dvDienDongHos");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvHoaDon", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHD"));

                    b.Property<decimal>("ConNo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DaThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsThanhToan")
                        .HasColumnType("bit");

                    b.Property<int>("MaDVSD")
                        .HasColumnType("int");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int?>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhaiThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThueBVMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThueVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienBVMT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienTruocVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHD");

                    b.HasIndex("MaDVSD");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaMB");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("dvHoaDons");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvLoaiDV", b =>
                {
                    b.Property<int>("MaLDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLDV"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEssential")
                        .HasColumnType("bit");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLDV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLDV");

                    b.HasIndex("MaTN");

                    b.ToTable("dvLoaiDVs");

                    b.HasData(
                        new
                        {
                            MaLDV = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "<Zap className=\"h-5 w-5 text-yellow-500\" />",
                            IsEssential = true,
                            MoTa = "Dịch vụ điện cho cư dân",
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenLDV = "Dịch vụ điện",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaLDV = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "<Droplet className=\"h-5 w-5 text-blue-500\" />",
                            IsEssential = true,
                            MoTa = "Dịch vụ nước cho cư dân",
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenLDV = "Dịch vụ nước",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaLDV = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "<Wifi className=\"h-5 w-5 text-purple-500\" />",
                            IsEssential = true,
                            MoTa = "Dịch vụ Internet cho cư dân",
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenLDV = "Dịch vụ Internet",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaLDV = 4,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "<Car className=\"h-5 w-5 text-gray-500\" />",
                            IsEssential = true,
                            MoTa = "Dịch vụ gửi xe cho cư dân",
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenLDV = "Dịch vụ gửi xe",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaLDV = 5,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "<Dumbbell className=\"h-5 w-5 text-green-500\" />",
                            IsEssential = false,
                            MoTa = "Dịch vụ phòng tập Gym cho cư dân",
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenLDV = "Dịch vụ Gym",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuoc", b =>
                {
                    b.Property<int>("MaNuoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNuoc"));

                    b.Property<decimal>("ChiSoCuoi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChiSoDau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsThanhToan")
                        .HasColumnType("bit");

                    b.Property<int>("MaDH")
                        .HasColumnType("int");

                    b.Property<int>("MaDM")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDauSuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDenHang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTieuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaNuoc");

                    b.HasIndex("MaDH");

                    b.HasIndex("MaDM");

                    b.ToTable("dvNuocs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuocDinhMuc", b =>
                {
                    b.Property<int>("MaDM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDM"));

                    b.Property<int>("ChiSoCuoi")
                        .HasColumnType("int");

                    b.Property<int>("ChiSoDau")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DonGiaDinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDM");

                    b.ToTable("dvNuocDinhMucs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuocDongHo", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDH"));

                    b.Property<int>("ChiSoSuDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int?>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDongHo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDH");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaMB")
                        .IsUnique()
                        .HasFilter("[MaMB] IS NOT NULL");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("dvNuocDongHos");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvgxLoaiXe", b =>
                {
                    b.Property<int>("MaLX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLX"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLX");

                    b.ToTable("dvgxLoaiXes");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvgxTheXe", b =>
                {
                    b.Property<int>("MaTX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTX"));

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaKH")
                        .HasColumnType("int");

                    b.Property<int>("MaLX")
                        .HasColumnType("int");

                    b.Property<int>("MaMB")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDauSuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTX");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaLX");

                    b.HasIndex("MaMB");

                    b.ToTable("dvgxTheXes");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.mbLoaiMB", b =>
                {
                    b.Property<int>("MaLMB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLMB"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLMB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLMB");

                    b.ToTable("mbLoaiMBs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.mbTrangThai", b =>
                {
                    b.Property<int>("MaTrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTrangThai"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaTrangThai");

                    b.ToTable("mbTrangThais");

                    b.HasData(
                        new
                        {
                            MaTrangThai = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Chưa bàn giao",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaTrangThai = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đang sử dụng",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaTrangThai = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đã thanh lý",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtChiTietBaoTri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKeHoach")
                        .HasColumnType("int");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaKeHoach");

                    b.HasIndex("MaTrangThai");

                    b.ToTable("nkbtChiTietBaoTris");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", b =>
                {
                    b.Property<int>("MaKeHoach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKeHoach"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoaiBaoTri")
                        .HasColumnType("int");

                    b.Property<int>("MaHeThong")
                        .HasColumnType("int");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<string>("MoTaCongViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBaoTri")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TanSuat")
                        .HasColumnType("int");

                    b.Property<string>("TenKeHoach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaKeHoach");

                    b.HasIndex("MaHeThong");

                    b.HasIndex("MaTrangThai");

                    b.ToTable("nkbtKeHoachBaoTris");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtLichSuBaoTri", b =>
                {
                    b.Property<int>("MaLichSu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichSu"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaHeThong")
                        .HasColumnType("int");

                    b.Property<int>("MaKeHoach")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLichSu");

                    b.HasIndex("MaHeThong");

                    b.HasIndex("MaKeHoach");

                    b.ToTable("nkbtLichSuBaoTris");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtTrangThai", b =>
                {
                    b.Property<int>("MaTrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTrangThai"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaTrangThai");

                    b.ToTable("nkbtTrangThais");

                    b.HasData(
                        new
                        {
                            MaTrangThai = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Chưa thực hiện",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaTrangThai = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đang thực hiện",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaTrangThai = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đã hoàn thành",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MaTrangThai = 4,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đã hủy",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nvDanhGia", b =>
                {
                    b.Property<int>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGia"));

                    b.Property<decimal>("DiemDanhGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaNV");

                    b.ToTable("nvDanhGias");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.ptPhieuThu", b =>
                {
                    b.Property<int>("MaPT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPT"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaHD")
                        .HasColumnType("int");

                    b.Property<string>("NganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThu")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPT");

                    b.HasIndex("MaHD");

                    b.ToTable("ptPhieuThus");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CtyTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiThuongTru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCaNhan")
                        .HasColumnType("bit");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<string>("MaSoThue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("MatKhauMaHoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaiKhoanCuDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("tnKhachHangs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhoiNha", b =>
                {
                    b.Property<int>("MaKN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKN"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThaiKhoiNha")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaKN");

                    b.HasIndex("MaTN");

                    b.ToTable("tnKhoiNhas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnMatBang", b =>
                {
                    b.Property<int>("MaMB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMB"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DienTichBG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DienTichThongThuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DienTichTimTuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int>("MaLMB")
                        .HasColumnType("int");

                    b.Property<int>("MaTL")
                        .HasColumnType("int");

                    b.Property<int>("MaTN")
                        .HasColumnType("int");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<string>("MaVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBanGiao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHanChoThue")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaMB");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaLMB");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.HasIndex("MaTrangThai");

                    b.ToTable("tnMatBangs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnNhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNV"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChiThuongTru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaPB")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.ToTable("tnNhanViens");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnPhongBan", b =>
                {
                    b.Property<int>("MaPB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPB"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPB");

                    b.HasIndex("MaTN");

                    b.ToTable("tnPhongBans");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnTangLau", b =>
                {
                    b.Property<int>("MaTL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTL"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DienTichKhuVucDungChung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DienTichKyThuaPhuTro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DienTichSan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaKN")
                        .HasColumnType("int");

                    b.Property<int>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaTL");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaTN");

                    b.ToTable("tnTangLaus");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnToaNha", b =>
                {
                    b.Property<int>("MaTN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTN"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DienTichXayDung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NganHangThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungChuyenKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoTangHam")
                        .HasColumnType("int");

                    b.Property<int>("SoTangNoi")
                        .HasColumnType("int");

                    b.Property<string>("TenTN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongDienTichChoThueGross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongDienTichChoThueNET")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongDienTichSan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThaiToaNha")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaTN");

                    b.ToTable("tnToaNhas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnbtHeThong", b =>
                {
                    b.Property<int>("MaHeThong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHeThong"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHeThong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHeThong");

                    b.HasIndex("MaMB");

                    b.HasIndex("MaTN");

                    b.ToTable("tnbtHeThongs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnycTrangThai", b =>
                {
                    b.Property<int>("IdTrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrangThai"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTrangThai");

                    b.ToTable("tnycTrangThais");

                    b.HasData(
                        new
                        {
                            IdTrangThai = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Chờ duyệt",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdTrangThai = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đã duyệt",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdTrangThai = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đang thực hiện",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdTrangThai = 4,
                            CreatedDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiSua = "",
                            NguoiTao = "Admin",
                            TenTrangThai = "Đã hoàn thành",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnycYeuCauSuaChua", b =>
                {
                    b.Property<int>("MaYC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaYC"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTrangThai")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaHeThong")
                        .HasColumnType("int");

                    b.Property<int>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaKN")
                        .HasColumnType("int");

                    b.Property<int?>("MaMB")
                        .HasColumnType("int");

                    b.Property<int?>("MaTL")
                        .HasColumnType("int");

                    b.Property<int>("MaTN")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MucDoYeuCau")
                        .HasColumnType("int");

                    b.Property<string>("NguoiSua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiYeuCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaYC");

                    b.HasIndex("IdTrangThai");

                    b.HasIndex("MaHeThong");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKN");

                    b.HasIndex("MaMB");

                    b.HasIndex("MaTL");

                    b.HasIndex("MaTN");

                    b.ToTable("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("PhongBan_NhanVien", b =>
                {
                    b.Property<int>("MaPB")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.HasKey("MaPB", "MaNV");

                    b.HasIndex("MaNV");

                    b.ToTable("PhongBan_NhanVien");
                });

            modelBuilder.Entity("Role_NhanVien", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "MaNV");

                    b.HasIndex("MaNV");

                    b.ToTable("Role_NhanVien");
                });

            modelBuilder.Entity("Role_Permission", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "Id");

                    b.HasIndex("Id");

                    b.ToTable("Role_Permission");
                });

            modelBuilder.Entity("ToaNha_NhanVien", b =>
                {
                    b.Property<int>("MaTN")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.HasKey("MaTN", "MaNV");

                    b.HasIndex("MaNV");

                    b.ToTable("ToaNha_NhanVien");
                });

            modelBuilder.Entity("YeuCau_NhanVien", b =>
                {
                    b.Property<int>("MaYC")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.HasKey("MaYC", "MaNV");

                    b.HasIndex("MaNV");

                    b.ToTable("YeuCau_NhanVien");
                });

            modelBuilder.Entity("BaoTri_NhanVien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", null)
                        .WithMany()
                        .HasForeignKey("MaKeHoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", null)
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVu", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvLoaiDV", "dvLoaiDV")
                        .WithMany("dvDichVus")
                        .HasForeignKey("MaLDV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvDichVus")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("dvLoaiDV");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVuSuDung", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvDichVu", "dvDichVu")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaDV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaKH");

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaMB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvDichVuSuDungs")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("dvDichVu");

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnMatBang");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvDienDongHo", "dvDienDongHo")
                        .WithMany("dvDiens")
                        .HasForeignKey("MaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.dvDienDinhMuc", "dvDienDinhMuc")
                        .WithMany("dvDiens")
                        .HasForeignKey("MaDM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dvDienDinhMuc");

                    b.Navigation("dvDienDongHo");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDienDongHo", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("dvDienDongHo")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("dvDienDongHos")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithOne("dvDienDongHo")
                        .HasForeignKey("BuildingManagement.Domain.Entities.dvDienDongHo", "MaMB");

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("dvDienDongHos")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvDienDongHos")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnMatBang");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvHoaDon", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvDichVuSuDung", "dvDichVuSuDung")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaDVSD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaMB")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvHoaDons")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("dvDichVuSuDung");

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnMatBang");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvLoaiDV", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvLoaiDVs")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuoc", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvNuocDongHo", "dvNuocDongHo")
                        .WithMany("dvNuocs")
                        .HasForeignKey("MaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.dvNuocDinhMuc", "dvNuocDinhMuc")
                        .WithMany("dvNuocs")
                        .HasForeignKey("MaDM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dvNuocDinhMuc");

                    b.Navigation("dvNuocDongHo");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuocDongHo", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("dvNuocDongHo")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("dvNuocDongHos")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithOne("dvNuocDongHo")
                        .HasForeignKey("BuildingManagement.Domain.Entities.dvNuocDongHo", "MaMB");

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("dvNuocDongHos")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("dvNuocDongHos")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnMatBang");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvgxTheXe", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("dvgxTheXes")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.dvgxLoaiXe", "dvgxLoaiXe")
                        .WithMany("dvgxTheXes")
                        .HasForeignKey("MaLX")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithMany("dvgxTheXes")
                        .HasForeignKey("MaMB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dvgxLoaiXe");

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnMatBang");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtChiTietBaoTri", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", "nkbtKeHoachBaoTri")
                        .WithMany("nkbtChiTietBaoTris")
                        .HasForeignKey("MaKeHoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.nkbtTrangThai", "nkbtTrangThai")
                        .WithMany("nkbtChiTietBaoTris")
                        .HasForeignKey("MaTrangThai")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("nkbtKeHoachBaoTri");

                    b.Navigation("nkbtTrangThai");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnbtHeThong", "tnbtHeThong")
                        .WithMany("nkbtKeHoachBaoTris")
                        .HasForeignKey("MaHeThong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.nkbtTrangThai", "nkbtTrangThai")
                        .WithMany("nkbtKeHoachBaoTris")
                        .HasForeignKey("MaTrangThai")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("nkbtTrangThai");

                    b.Navigation("tnbtHeThong");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtLichSuBaoTri", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnbtHeThong", "tnbtHeThong")
                        .WithMany("nkbtLichSuBaoTris")
                        .HasForeignKey("MaHeThong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", "nkbtKeHoachBaoTri")
                        .WithMany("nkbtLichSuBaoTris")
                        .HasForeignKey("MaKeHoach")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("nkbtKeHoachBaoTri");

                    b.Navigation("tnbtHeThong");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nvDanhGia", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", "tnNhanVien")
                        .WithMany("nvDanhGias")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("tnNhanVien");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.ptPhieuThu", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.dvHoaDon", "dvHoaDon")
                        .WithMany("ptPhieuThus")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dvHoaDon");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhachHang", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("tnKhachHangs")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("tnKhachHangs")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnKhachHangs")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhoiNha", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnKhoiNhas")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnMatBang", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaKH");

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.mbLoaiMB", "mbLoaiMB")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaLMB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.mbTrangThai", "mbTrangThai")
                        .WithMany("tnMatBangs")
                        .HasForeignKey("MaTrangThai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mbLoaiMB");

                    b.Navigation("mbTrangThai");

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnPhongBan", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnPhongBans")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnTangLau", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("tnTangLaus")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnTangLaus")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnbtHeThong", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithMany("tnbtHeThongs")
                        .HasForeignKey("MaMB")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnbtHeThongs")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("tnMatBang");

                    b.Navigation("tnToaNha");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnycYeuCauSuaChua", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnycTrangThai", "tnycTrangThai")
                        .WithMany("tnycYeuCaus")
                        .HasForeignKey("IdTrangThai")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnbtHeThong", "tnbtHeThong")
                        .WithMany("tnycYeuCauSuaChua")
                        .HasForeignKey("MaHeThong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhachHang", "tnKhachHang")
                        .WithMany("tnycYeuCauSuaChuas")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnKhoiNha", "tnKhoiNha")
                        .WithMany("tnycYeuCauSuaChuas")
                        .HasForeignKey("MaKN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnMatBang", "tnMatBang")
                        .WithMany("tnycYeuCauSuaChuas")
                        .HasForeignKey("MaMB")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnTangLau", "tnTangLau")
                        .WithMany("tnycYeuCauSuaChuas")
                        .HasForeignKey("MaTL")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", "tnToaNha")
                        .WithMany("tnycYeuCauSuaChuas")
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("tnKhachHang");

                    b.Navigation("tnKhoiNha");

                    b.Navigation("tnMatBang");

                    b.Navigation("tnTangLau");

                    b.Navigation("tnToaNha");

                    b.Navigation("tnbtHeThong");

                    b.Navigation("tnycTrangThai");
                });

            modelBuilder.Entity("PhongBan_NhanVien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", null)
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnPhongBan", null)
                        .WithMany()
                        .HasForeignKey("MaPB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Role_NhanVien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", null)
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Role_Permission", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToaNha_NhanVien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", null)
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnToaNha", null)
                        .WithMany()
                        .HasForeignKey("MaTN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YeuCau_NhanVien", b =>
                {
                    b.HasOne("BuildingManagement.Domain.Entities.tnNhanVien", null)
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingManagement.Domain.Entities.tnycYeuCauSuaChua", null)
                        .WithMany()
                        .HasForeignKey("MaYC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVu", b =>
                {
                    b.Navigation("dvDichVuSuDungs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDichVuSuDung", b =>
                {
                    b.Navigation("dvHoaDons");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDienDinhMuc", b =>
                {
                    b.Navigation("dvDiens");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvDienDongHo", b =>
                {
                    b.Navigation("dvDiens");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvHoaDon", b =>
                {
                    b.Navigation("ptPhieuThus");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvLoaiDV", b =>
                {
                    b.Navigation("dvDichVus");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuocDinhMuc", b =>
                {
                    b.Navigation("dvNuocs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvNuocDongHo", b =>
                {
                    b.Navigation("dvNuocs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.dvgxLoaiXe", b =>
                {
                    b.Navigation("dvgxTheXes");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.mbLoaiMB", b =>
                {
                    b.Navigation("tnMatBangs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.mbTrangThai", b =>
                {
                    b.Navigation("tnMatBangs");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtKeHoachBaoTri", b =>
                {
                    b.Navigation("nkbtChiTietBaoTris");

                    b.Navigation("nkbtLichSuBaoTris");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.nkbtTrangThai", b =>
                {
                    b.Navigation("nkbtChiTietBaoTris");

                    b.Navigation("nkbtKeHoachBaoTris");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhachHang", b =>
                {
                    b.Navigation("dvDichVuSuDungs");

                    b.Navigation("dvDienDongHo");

                    b.Navigation("dvHoaDons");

                    b.Navigation("dvNuocDongHo");

                    b.Navigation("dvgxTheXes");

                    b.Navigation("tnMatBangs");

                    b.Navigation("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnKhoiNha", b =>
                {
                    b.Navigation("dvDichVuSuDungs");

                    b.Navigation("dvDienDongHos");

                    b.Navigation("dvHoaDons");

                    b.Navigation("dvNuocDongHos");

                    b.Navigation("tnKhachHangs");

                    b.Navigation("tnMatBangs");

                    b.Navigation("tnTangLaus");

                    b.Navigation("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnMatBang", b =>
                {
                    b.Navigation("dvDichVuSuDungs");

                    b.Navigation("dvDienDongHo")
                        .IsRequired();

                    b.Navigation("dvHoaDons");

                    b.Navigation("dvNuocDongHo")
                        .IsRequired();

                    b.Navigation("dvgxTheXes");

                    b.Navigation("tnbtHeThongs");

                    b.Navigation("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnNhanVien", b =>
                {
                    b.Navigation("nvDanhGias");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnTangLau", b =>
                {
                    b.Navigation("dvDichVuSuDungs");

                    b.Navigation("dvDienDongHos");

                    b.Navigation("dvHoaDons");

                    b.Navigation("dvNuocDongHos");

                    b.Navigation("tnKhachHangs");

                    b.Navigation("tnMatBangs");

                    b.Navigation("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnToaNha", b =>
                {
                    b.Navigation("dvDichVuSuDungs");

                    b.Navigation("dvDichVus");

                    b.Navigation("dvDienDongHos");

                    b.Navigation("dvHoaDons");

                    b.Navigation("dvLoaiDVs");

                    b.Navigation("dvNuocDongHos");

                    b.Navigation("tnKhachHangs");

                    b.Navigation("tnKhoiNhas");

                    b.Navigation("tnMatBangs");

                    b.Navigation("tnPhongBans");

                    b.Navigation("tnTangLaus");

                    b.Navigation("tnbtHeThongs");

                    b.Navigation("tnycYeuCauSuaChuas");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnbtHeThong", b =>
                {
                    b.Navigation("nkbtKeHoachBaoTris");

                    b.Navigation("nkbtLichSuBaoTris");

                    b.Navigation("tnycYeuCauSuaChua");
                });

            modelBuilder.Entity("BuildingManagement.Domain.Entities.tnycTrangThai", b =>
                {
                    b.Navigation("tnycYeuCaus");
                });
#pragma warning restore 612, 618
        }
    }
}
